{
  "swagger": "2.0",
  "info": {
    "title": "Cudo Compute service",
    "version": "1.0.0"
  },
  "host": "rest.compute.cudo.org",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/api-keys": {
      "get": {
        "summary": "List",
        "description": "List the details of all API keys created by the requesting user. This does not include the API key itself which is only visible once when the API key is created.",
        "operationId": "ListApiKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListApiKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "API keys"
        ]
      },
      "post": {
        "summary": "Generate",
        "description": "Creates a new API key for the requesting user. The API key is returned in the response, and this is the only time it can be viewed.",
        "operationId": "GenerateApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateApiKeyRequest"
            }
          }
        ],
        "tags": [
          "API keys"
        ]
      }
    },
    "/v1/api-keys/{name}": {
      "delete": {
        "summary": "Delete",
        "description": "Deletes an API key, revoking all access for requests that use the key.",
        "operationId": "DeleteApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "API keys"
        ]
      }
    },
    "/v1/auth": {
      "get": {
        "summary": "Get",
        "description": "Responds with details of the user when suitable authentication material is sent with the request.",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "Delete",
        "description": "Deletes your user, deleting all records of your user, and revoking access to every resource.",
        "operationId": "DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/v1/auth/create-identity-verification-session": {
      "get": {
        "summary": "Get identity verification session",
        "operationId": "CreateIdentityVerificationSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/IdentityVerificationSession"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/v1/auth/permissions": {
      "get": {
        "summary": "List",
        "operationId": "ListUserPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListUserPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dataCenterId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "billingAccountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Permissions"
        ]
      }
    },
    "/v1/auth/track": {
      "post": {
        "operationId": "Track",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrackRequest"
            }
          }
        ]
      }
    },
    "/v1/billing-accounts": {
      "get": {
        "summary": "List billing accounts",
        "operationId": "ListBillingAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListBillingAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "post": {
        "summary": "Create a billing account",
        "operationId": "CreateBillingAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BillingAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBillingAccountRequest"
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/invoices": {
      "get": {
        "summary": "List invoices",
        "operationId": "ListBillingAccountInvoices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListBillingAccountInvoicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/invoices/outstanding": {
      "get": {
        "summary": "Get outstanding invoices",
        "operationId": "ListOutstandingInvoices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListOutstandingInvoicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/{billingAccount.id}": {
      "patch": {
        "summary": "Update billing account",
        "operationId": "UpdateBillingAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BillingAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "billingAccount.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBillingAccountBody"
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/{billingAccountId}/add-user-permission": {
      "post": {
        "summary": "Add billing account user",
        "operationId": "AddBillingAccountUserPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "billingAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddBillingAccountUserPermissionBody"
            }
          }
        ],
        "tags": [
          "Permissions"
        ]
      }
    },
    "/v1/billing-accounts/{billingAccountId}/remove-user-permission": {
      "post": {
        "summary": "Remove billing account user",
        "operationId": "RemoveBillingAccountUserPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "billingAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveBillingAccountUserPermissionBody"
            }
          }
        ],
        "tags": [
          "Permissions"
        ]
      }
    },
    "/v1/billing-accounts/{billingAccountId}/spend/details": {
      "get": {
        "summary": "Get spend details",
        "operationId": "GetBillingAccountSpendDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetBillingAccountSpendDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "billingAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/{id}": {
      "get": {
        "summary": "Get a billing account",
        "operationId": "GetBillingAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BillingAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "delete": {
        "summary": "Delete billing account",
        "operationId": "DeleteBillingAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/{id}/credit": {
      "post": {
        "summary": "Add credit to billing account",
        "operationId": "CreateBillingAccountCreditPayment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateBillingAccountCreditPaymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "amount.value",
            "description": "The decimal value, as a string.\n\nThe string representation consists of an optional sign, `+` (`U+002B`)\nor `-` (`U+002D`), followed by a sequence of zero or more decimal digits\n(\"the integer\"), optionally followed by a fraction, optionally followed\nby an exponent.\n\nThe fraction consists of a decimal point followed by zero or more decimal\ndigits. The string must contain at least one digit in either the integer\nor the fraction. The number formed by the sign, the integer and the\nfraction is referred to as the significand.\n\nThe exponent consists of the character `e` (`U+0065`) or `E` (`U+0045`)\nfollowed by one or more decimal digits.\n\nServices **should** normalize decimal values before storing them by:\n\n  - Removing an explicitly-provided `+` sign (`+2.5` -\u003e `2.5`).\n  - Replacing a zero-length integer value with `0` (`.5` -\u003e `0.5`).\n  - Coercing the exponent character to lower-case (`2.5E8` -\u003e `2.5e8`).\n  - Removing an explicitly-provided zero exponent (`2.5e0` -\u003e `2.5`).\n\nServices **may** perform additional normalization based on its own needs\nand the internal decimal implementation selected, such as shifting the\ndecimal point and exponent value together (example: `2.5e-1` \u003c-\u003e `0.25`).\nAdditionally, services **may** preserve trailing zeroes in the fraction\nto indicate increased precision, but are not required to do so.\n\nNote that only the `.` character is supported to divide the integer\nand the fraction; `,` **should not** be supported regardless of locale.\nAdditionally, thousand separators **should not** be supported. If a\nservice does support them, values **must** be normalized.\n\nThe ENBF grammar is:\n\n    DecimalString =\n      [Sign] Significand [Exponent];\n\n    Sign = '+' | '-';\n\n    Significand =\n      Digits ['.'] [Digits] | [Digits] '.' Digits;\n\n    Exponent = ('e' | 'E') [Sign] Digits;\n\n    Digits = { '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' };\n\nServices **should** clearly document the range of supported values, the\nmaximum supported precision (total number of digits), and, if applicable,\nthe scale (number of digits after the decimal point), as well as how it\nbehaves when receiving out-of-bounds values.\n\nServices **may** choose to accept values passed as input even when the\nvalue has a higher precision or scale than the service supports, and\n**should** round the value to fit the supported scale. Alternatively, the\nservice **may** error with `400 Bad Request` (`INVALID_ARGUMENT` in gRPC)\nif precision would be lost.\n\nServices **should** error with `400 Bad Request` (`INVALID_ARGUMENT` in\ngRPC) if the service receives a value outside of the supported range.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "radarSessionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/{id}/credit-balance-transactions": {
      "get": {
        "summary": "List credit balance transactions on a billing account",
        "operationId": "ListBillingAccountCreditBalanceTransactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListBillingAccountCreditBalanceTransactionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/{id}/details": {
      "get": {
        "summary": "Get billing account details",
        "operationId": "GetBillingAccountDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetBillingAccountDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/{id}/payment-methods": {
      "get": {
        "summary": "Get payment methods",
        "operationId": "GetBillingAccountPaymentMethods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BillingAccountPaymentMethods"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/{id}/payment-methods/{paymentMethodId}": {
      "delete": {
        "summary": "Remove payment method",
        "operationId": "RemoveBillingAccountPaymentMethod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RemoveBillingAccountPaymentMethodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/{id}/payment-methods/{paymentMethodId}/set-default": {
      "post": {
        "summary": "Set default payment method",
        "operationId": "SetBillingAccountDefaultPaymentMethod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SetBillingAccountDefaultPaymentMethodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/{id}/projects": {
      "get": {
        "operationId": "ListBillingAccountProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListBillingAccountProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "string page_token = 2;\n int32 page_size = 3;",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/v1/billing-accounts/{id}/setup-intent": {
      "get": {
        "summary": "Get setup intent",
        "operationId": "GetBillingAccountSetupIntent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BillingAccountSetupIntent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billing-accounts/{id}/transactions": {
      "get": {
        "summary": "List transactions on a billing account",
        "operationId": "ListBillingAccountTransactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListBillingAccountTransactionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/data-centers": {
      "get": {
        "summary": "List data centers",
        "description": "Returns the data centers in an organization",
        "operationId": "ListDataCenters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListDataCentersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Data Centers"
        ]
      },
      "post": {
        "summary": "Create data center",
        "description": "Creates a new data center",
        "operationId": "CreateDataCenter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.DataCenter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCenter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.DataCenter"
            }
          }
        ],
        "tags": [
          "Data Centers"
        ]
      }
    },
    "/v1/data-centers/{dataCenter.id}": {
      "patch": {
        "summary": "Update data center",
        "description": "Updates a data center",
        "operationId": "UpdateDataCenter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.DataCenter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCenter.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDataCenterBody"
            }
          }
        ],
        "tags": [
          "Data Centers"
        ]
      }
    },
    "/v1/data-centers/{dataCenterId}/add-user-permission": {
      "post": {
        "summary": "Add data center user",
        "operationId": "AddDataCenterUserPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCenterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddDataCenterUserPermissionBody"
            }
          }
        ],
        "tags": [
          "Permissions"
        ]
      }
    },
    "/v1/data-centers/{dataCenterId}/clusters": {
      "get": {
        "summary": "List clusters",
        "description": "Returns the clusters in a data center",
        "operationId": "ListClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListClustersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCenterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Data Centers"
        ]
      }
    },
    "/v1/data-centers/{dataCenterId}/host-count": {
      "get": {
        "summary": "Get host count",
        "description": "Returns the number of hosts in a data center",
        "operationId": "CountHosts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CountHostsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCenterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Data Centers"
        ]
      }
    },
    "/v1/data-centers/{dataCenterId}/hosts": {
      "get": {
        "summary": "List hosts",
        "description": "Returns the hosts in a data center",
        "operationId": "ListHosts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListHostsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCenterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Data Centers"
        ]
      }
    },
    "/v1/data-centers/{dataCenterId}/machine-type-prices": {
      "get": {
        "operationId": "ListDataCenterMachineTypePrices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListDataCenterMachineTypePricesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCenterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/v1/data-centers/{dataCenterId}/machine-types": {
      "get": {
        "summary": "List machine types for a data center",
        "operationId": "ListMachineTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListMachineTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCenterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Machine Types"
        ]
      }
    },
    "/v1/data-centers/{dataCenterId}/machine-types/{machineType}": {
      "get": {
        "summary": "Get a machine type in a data center",
        "operationId": "GetMachineType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMachineTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCenterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "machineType",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Machine Types"
        ]
      }
    },
    "/v1/data-centers/{dataCenterId}/machine-types/{machineType}/live-utilization": {
      "get": {
        "summary": "Get the utilization for a machine type in a data center",
        "operationId": "GetMachineTypeLiveUtilization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMachineTypeLiveUtilizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCenterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "machineType",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Machine Types"
        ]
      }
    },
    "/v1/data-centers/{dataCenterId}/remove-user-permission": {
      "post": {
        "summary": "Remove data center user",
        "operationId": "RemoveDataCenterUserPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCenterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveDataCenterUserPermissionBody"
            }
          }
        ],
        "tags": [
          "Permissions"
        ]
      }
    },
    "/v1/data-centers/{id}": {
      "get": {
        "summary": "Get data center",
        "description": "Returns a data center",
        "operationId": "GetDataCenter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.DataCenter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Data Centers"
        ]
      },
      "delete": {
        "summary": "Delete data center",
        "description": "Deletes a data center",
        "operationId": "DeleteDataCenter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Data Centers"
        ]
      }
    },
    "/v1/data-centers/{id}/live-utilization": {
      "get": {
        "summary": "Get live utilization",
        "description": "Returns the live utilization of a data center",
        "operationId": "GetDataCenterLiveUtilization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetDataCenterLiveUtilizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Data Centers"
        ]
      }
    },
    "/v1/data-centers/{id}/revenue": {
      "get": {
        "summary": "Get revenue time series",
        "description": "Returns the revenue of a data center over time",
        "operationId": "GetDataCenterRevenueTimeSeries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetDataCenterRevenueTimeSeriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "INTERVAL_UNKNOWN",
              "INTERVAL_DAY",
              "INTERVAL_WEEK",
              "INTERVAL_MONTH"
            ],
            "default": "INTERVAL_UNKNOWN"
          }
        ],
        "tags": [
          "Data Centers"
        ]
      }
    },
    "/v1/data-centers/{id}/revenue-by-resource": {
      "get": {
        "summary": "Get revenue by resource",
        "description": "Returns the revenue of a data center by resource (CPU, Memory, Storage, etc.)",
        "operationId": "GetDataCenterRevenueByResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetDataCenterRevenueByResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Data Centers"
        ]
      }
    },
    "/v1/project/{projectId}/ssh-keys": {
      "get": {
        "summary": "List SSH keys",
        "operationId": "ListProjectSshKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListProjectSshKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Projects"
        ]
      }
    },
    "/v1/projects": {
      "get": {
        "summary": "List",
        "operationId": "ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Projects"
        ]
      },
      "post": {
        "summary": "Create",
        "operationId": "CreateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "tags": [
          "Projects"
        ]
      }
    },
    "/v1/projects/{id}": {
      "get": {
        "summary": "Get",
        "operationId": "GetProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Projects"
        ]
      },
      "delete": {
        "summary": "Delete",
        "operationId": "DeleteProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Projects"
        ]
      }
    },
    "/v1/projects/{project.id}": {
      "patch": {
        "summary": "Update",
        "operationId": "UpdateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "project.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProjectBody"
            }
          }
        ],
        "tags": [
          "Projects"
        ]
      }
    },
    "/v1/projects/{projectId}/add-user-permission": {
      "post": {
        "summary": "Add project user",
        "operationId": "AddProjectUserPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddProjectUserPermissionBody"
            }
          }
        ],
        "tags": [
          "Permissions"
        ]
      }
    },
    "/v1/projects/{projectId}/count-vms": {
      "get": {
        "summary": "Count",
        "operationId": "CountVMs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CountVMsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/disk/{id}/attach": {
      "patch": {
        "summary": "Attach storage disk to VM",
        "operationId": "AttachStorageDisk",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AttachStorageDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "vmId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Disks"
        ]
      }
    },
    "/v1/projects/{projectId}/disk/{id}/detach": {
      "put": {
        "summary": "Detach storage disk from VM",
        "operationId": "DetachStorageDisk",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DetachStorageDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Disks"
        ]
      }
    },
    "/v1/projects/{projectId}/disks": {
      "get": {
        "summary": "List disks",
        "operationId": "ListDisks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListDisksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dataCenterId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Disks"
        ]
      },
      "post": {
        "summary": "Create storage disk",
        "operationId": "CreateStorageDisk",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateStorageDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateStorageDiskBody"
            }
          }
        ],
        "tags": [
          "Disks"
        ]
      }
    },
    "/v1/projects/{projectId}/disks/{id}": {
      "get": {
        "summary": "List disks",
        "operationId": "GetDisk",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Disks"
        ]
      },
      "delete": {
        "summary": "Delete storage disk",
        "operationId": "DeleteStorageDisk",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteStorageDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Disks"
        ]
      }
    },
    "/v1/projects/{projectId}/disks/{id}/revert": {
      "post": {
        "summary": "Revert Disk to Snapshot",
        "operationId": "RevertDisk",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RevertDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "snapshotId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "vmId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Disks"
        ]
      }
    },
    "/v1/projects/{projectId}/disks/{id}/snapshots": {
      "get": {
        "summary": "List Disk Snapshots",
        "operationId": "ListDiskSnapshots",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListDiskSnapshotsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Disks"
        ]
      },
      "delete": {
        "summary": "Delete Disk Snapshots",
        "operationId": "DeleteDiskSnapshot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteDiskSnapshotResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "snapshotId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "vmId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Disks"
        ]
      },
      "post": {
        "summary": "Create Disk Snapshot",
        "operationId": "CreateDiskSnapshot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateDiskSnapshotResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDiskSnapshotBody"
            }
          }
        ],
        "tags": [
          "Disks"
        ]
      }
    },
    "/v1/projects/{projectId}/images": {
      "get": {
        "summary": "List private VM images",
        "operationId": "ListPrivateVMImages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListPrivateVMImagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      },
      "post": {
        "summary": "Create private VM image",
        "operationId": "CreatePrivateVMImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreatePrivateVMImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "vmId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/images/{id}": {
      "get": {
        "summary": "Get private VM image",
        "operationId": "GetPrivateVMImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetPrivateVMImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      },
      "delete": {
        "summary": "Delete private VM image",
        "operationId": "DeletePrivateVMImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeletePrivateVMImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      },
      "post": {
        "summary": "Update private VM image",
        "operationId": "UpdatePrivateVMImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdatePrivateVMImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/networks": {
      "get": {
        "summary": "List networks",
        "operationId": "ListNetworks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListNetworksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Networks"
        ]
      },
      "post": {
        "summary": "Create network",
        "operationId": "CreateNetwork",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateNetworkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNetworkBody"
            }
          }
        ],
        "tags": [
          "Networks"
        ]
      }
    },
    "/v1/projects/{projectId}/networks/security-groups": {
      "get": {
        "summary": "List security groups",
        "operationId": "ListSecurityGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListSecurityGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataCenterId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Networks"
        ]
      }
    },
    "/v1/projects/{projectId}/networks/security-groups/{id}": {
      "get": {
        "summary": "Get a security group",
        "operationId": "GetSecurityGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetSecurityGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Networks"
        ]
      },
      "delete": {
        "summary": "Delete security group",
        "operationId": "DeleteSecurityGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteSecurityGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Networks"
        ]
      }
    },
    "/v1/projects/{projectId}/networks/{id}": {
      "get": {
        "summary": "Get network",
        "operationId": "GetNetwork",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetNetworkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Networks"
        ]
      },
      "delete": {
        "summary": "Delete network",
        "operationId": "DeleteNetwork",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteNetworkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Networks"
        ]
      }
    },
    "/v1/projects/{projectId}/networks/{id}/start": {
      "post": {
        "summary": "Start network",
        "operationId": "StartNetwork",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/StartNetworkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Networks"
        ]
      }
    },
    "/v1/projects/{projectId}/networks/{id}/stop": {
      "post": {
        "summary": "Stop network",
        "operationId": "StopNetwork",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/StopNetworkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Networks"
        ]
      }
    },
    "/v1/projects/{projectId}/object-storage/activate": {
      "post": {
        "summary": "Allow the use of S3 compatible storage in a project",
        "operationId": "Activate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivateBody"
            }
          }
        ],
        "tags": [
          "Object Storage"
        ]
      }
    },
    "/v1/projects/{projectId}/object-storage/buckets": {
      "get": {
        "summary": "List buckets",
        "operationId": "ListObjectStorageBuckets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListObjectStorageBucketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Object Storage"
        ]
      }
    },
    "/v1/projects/{projectId}/object-storage/buckets/{id}": {
      "get": {
        "summary": "Get details for a bucket",
        "operationId": "GetObjectStorageBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ObjectStorageBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Object Storage"
        ]
      }
    },
    "/v1/projects/{projectId}/object-storage/session-key": {
      "get": {
        "summary": "Generate temporary key for storage bucket access",
        "operationId": "GetObjectStorageSessionKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetObjectStorageSessionKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataCenterId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Object Storage"
        ]
      }
    },
    "/v1/projects/{projectId}/object-storage/users": {
      "get": {
        "summary": "List storage users",
        "operationId": "ListObjectStorageUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListObjectStorageUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Object Storage"
        ]
      },
      "post": {
        "summary": "Create user that stores keys for storage buckets",
        "operationId": "CreateObjectStorageUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ObjectStorageUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateObjectStorageUserBody"
            }
          }
        ],
        "tags": [
          "Object Storage"
        ]
      }
    },
    "/v1/projects/{projectId}/object-storage/users/{id}": {
      "delete": {
        "summary": "Delete object storage user",
        "operationId": "DeleteObjectStorageUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteObjectStorageUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Object Storage"
        ]
      },
      "post": {
        "summary": "Generate access key for storage buckets",
        "operationId": "GenerateObjectStorageKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ObjectStorageKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Object Storage"
        ]
      }
    },
    "/v1/projects/{projectId}/object-storage/users/{id}/keys": {
      "get": {
        "summary": "List storage user keys",
        "operationId": "ListObjectStorageKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListObjectStorageKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Object Storage"
        ]
      }
    },
    "/v1/projects/{projectId}/object-storage/users/{id}/keys/{accessKey}": {
      "delete": {
        "summary": "Delete object storage user key",
        "operationId": "DeleteObjectStorageKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteObjectStorageKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accessKey",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Object Storage"
        ]
      }
    },
    "/v1/projects/{projectId}/remove-user-permission": {
      "post": {
        "summary": "Remove project user",
        "operationId": "RemoveProjectUserPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveProjectUserPermissionBody"
            }
          }
        ],
        "tags": [
          "Permissions"
        ]
      }
    },
    "/v1/projects/{projectId}/vm": {
      "post": {
        "summary": "Create virtual machine",
        "operationId": "CreateVM",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateVMBody"
            }
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vm/{id}/expire-time": {
      "post": {
        "operationId": "UpdateVMExpireTime",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateVMExpireTimeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateVMExpireTimeBody"
            }
          }
        ]
      }
    },
    "/v1/projects/{projectId}/vm/{id}/metadata": {
      "post": {
        "summary": "Update VM metadata",
        "operationId": "UpdateVMMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateVMMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateVMMetadataBody"
            }
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vm/{id}/security-group/attach": {
      "patch": {
        "summary": "Attach security group to VM",
        "operationId": "AttachSecurityGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AttachSecurityGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityGroupId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vm/{id}/security-group/detach": {
      "patch": {
        "summary": "Attach security group to VM",
        "operationId": "DetachSecurityGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DetachSecurityGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityGroupId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vms": {
      "get": {
        "summary": "List",
        "operationId": "ListVMs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListVMsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "networkId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vms/{id}": {
      "get": {
        "summary": "Get",
        "operationId": "GetVM",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vms/{id}/connect": {
      "get": {
        "summary": "Connect via VNC",
        "operationId": "ConnectVM",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ConnectVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vms/{id}/disks": {
      "get": {
        "summary": "List disks attached to VM",
        "operationId": "ListVMDisks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListVMDisksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      },
      "patch": {
        "summary": "Resize a VM's disk",
        "operationId": "ResizeVMDisk",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ResizeVMDiskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "diskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sizeGib",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vms/{id}/monitor": {
      "get": {
        "summary": "Monitor",
        "operationId": "MonitorVM",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MonitorVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vms/{id}/reboot": {
      "post": {
        "summary": "Reboot",
        "operationId": "RebootVM",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RebootVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vms/{id}/resize": {
      "post": {
        "summary": "Resize vCPU and memory of VM",
        "operationId": "ResizeVM",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ResizeVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "vcpus",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "memoryGib",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vms/{id}/start": {
      "post": {
        "summary": "Start",
        "operationId": "StartVM",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/StartVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vms/{id}/stop": {
      "post": {
        "summary": "Stop",
        "operationId": "StopVM",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/StopVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{projectId}/vms/{id}/terminate": {
      "post": {
        "summary": "Terminate",
        "operationId": "TerminateVM",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/TerminateVMResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/projects/{securityGroup.projectId}/networks/security-groups": {
      "post": {
        "summary": "Create security group",
        "operationId": "CreateSecurityGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateSecurityGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "securityGroup.projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityGroup",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dataCenterId": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/Rule"
                  }
                }
              },
              "required": [
                "dataCenterId",
                "id"
              ]
            }
          }
        ],
        "tags": [
          "Networks"
        ]
      }
    },
    "/v1/projects/{securityGroup.projectId}/networks/security-groups/{securityGroup.id}": {
      "patch": {
        "summary": "Update security group",
        "operationId": "UpdateSecurityGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateSecurityGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "securityGroup.projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityGroup.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityGroup",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dataCenterId": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/Rule"
                  }
                }
              },
              "required": [
                "dataCenterId"
              ]
            }
          }
        ],
        "tags": [
          "Networks"
        ]
      }
    },
    "/v1/regions": {
      "get": {
        "summary": "Regions",
        "operationId": "ListRegions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListRegionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "tags": [
          "Search"
        ]
      }
    },
    "/v1/resources/search": {
      "get": {
        "operationId": "SearchResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SearchResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/v1/ssh-keys": {
      "get": {
        "summary": "List",
        "operationId": "ListSshKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListSshKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "SSH keys"
        ]
      },
      "post": {
        "summary": "Create",
        "operationId": "CreateSshKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SshKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "sshKey",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SshKey"
            }
          }
        ],
        "tags": [
          "SSH keys"
        ]
      }
    },
    "/v1/ssh-keys/{id}": {
      "get": {
        "summary": "Get",
        "operationId": "GetSshKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SshKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SSH keys"
        ]
      },
      "delete": {
        "summary": "Delete",
        "operationId": "DeleteSshKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SSH keys"
        ]
      }
    },
    "/v1/vms/data-centers": {
      "get": {
        "summary": "List data centers",
        "operationId": "ListVMDataCenters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListVMDataCentersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "regionId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "renewableEnergy",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/vms/gpu-models": {
      "get": {
        "summary": "List GPU models",
        "operationId": "ListVMGpuModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListVMGpuModelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/vms/machine-types-2": {
      "get": {
        "summary": "List machine types v2",
        "operationId": "ListVMMachineTypes2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListVMMachineTypes2Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "tags": [
          "Virtual Machines"
        ]
      }
    },
    "/v1/vms/public-images": {
      "get": {
        "summary": "List public VM images",
        "operationId": "ListPublicVMImages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListPublicVMImagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "tags": [
          "Virtual Machines"
        ]
      }
    }
  },
  "definitions": {
    "ActivateBody": {
      "type": "object",
      "properties": {
        "dataCenterId": {
          "type": "string"
        }
      }
    },
    "AddBillingAccountUserPermissionBody": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role"
        }
      },
      "required": [
        "userEmail",
        "role"
      ]
    },
    "AddDataCenterUserPermissionBody": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "billingAccountId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role"
        }
      },
      "required": [
        "userEmail",
        "role"
      ]
    },
    "AddProjectUserPermissionBody": {
      "type": "object",
      "properties": {
        "dataCenterId": {
          "type": "string"
        },
        "billingAccountId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role"
        }
      },
      "required": [
        "userEmail",
        "role"
      ]
    },
    "ApiKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "key": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AttachSecurityGroupResponse": {
      "type": "object"
    },
    "AttachStorageDiskResponse": {
      "type": "object"
    },
    "BillingAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "displayName": {
          "type": "string"
        },
        "stripeRef": {
          "type": "string"
        },
        "createBy": {
          "type": "string",
          "readOnly": true
        },
        "monthlySpend": {
          "type": "string",
          "readOnly": true
        },
        "hourlySpendRate": {
          "$ref": "#/definitions/Decimal",
          "readOnly": true
        },
        "taxId": {
          "$ref": "#/definitions/TaxId"
        },
        "invoiceTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "billingThreshold": {
          "$ref": "#/definitions/Decimal",
          "readOnly": true
        },
        "monthlySpendLimit": {
          "$ref": "#/definitions/Decimal",
          "readOnly": true
        },
        "hourlySpendLimit": {
          "$ref": "#/definitions/Decimal",
          "readOnly": true
        },
        "nextInvoiceTotal": {
          "$ref": "#/definitions/Decimal",
          "readOnly": true
        },
        "creditBalance": {
          "$ref": "#/definitions/Decimal",
          "readOnly": true
        },
        "creditBalanceRecharge": {
          "$ref": "#/definitions/CreditBalanceRecharge"
        },
        "billingAddress": {
          "$ref": "#/definitions/BillingAddress"
        },
        "state": {
          "$ref": "#/definitions/BillingAccountState"
        },
        "paymentTerms": {
          "$ref": "#/definitions/PaymentTerms"
        }
      }
    },
    "BillingAccountPaymentMethod": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "card": {
          "$ref": "#/definitions/PaymentMethodCard"
        },
        "paypal": {
          "$ref": "#/definitions/PaymentMethodPaypal"
        },
        "isDefault": {
          "type": "boolean"
        }
      }
    },
    "BillingAccountPaymentMethods": {
      "type": "object",
      "properties": {
        "paymentMethods": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BillingAccountPaymentMethod"
          }
        }
      }
    },
    "BillingAccountProject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "resourceCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "id",
        "resourceCount"
      ]
    },
    "BillingAccountResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BillingAccountSetupIntent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "clientSecret"
      ]
    },
    "BillingAccountSpendRow": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "quantity": {
          "type": "number",
          "format": "float"
        },
        "unit": {
          "$ref": "#/definitions/Unit"
        },
        "unitAmount": {
          "$ref": "#/definitions/Decimal"
        },
        "amount": {
          "$ref": "#/definitions/Decimal"
        }
      },
      "required": [
        "projectId",
        "description",
        "quantity",
        "unit",
        "unitAmount",
        "amount"
      ]
    },
    "BillingAccountState": {
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "STATE_ACTIVE",
        "STATE_SUSPENDED_ABUSE",
        "STATE_SUSPENDED_PAYMENT"
      ],
      "default": "STATE_UNSPECIFIED"
    },
    "BillingAddress": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "line1": {
          "type": "string"
        },
        "line2": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "Charge": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Decimal"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "paid": {
          "type": "boolean"
        },
        "refunded": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "failureCode": {
          "type": "string"
        }
      },
      "required": [
        "amount",
        "createTime",
        "paid",
        "refunded",
        "status"
      ]
    },
    "Cluster": {
      "type": "object",
      "properties": {
        "machineType": {
          "type": "string"
        },
        "cpuModel": {
          "type": "string"
        },
        "vcpuPerCpuThread": {
          "type": "integer",
          "format": "int32"
        },
        "vcpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "memoryGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "gpuModel": {
          "type": "string"
        },
        "gpuModelId": {
          "type": "string"
        },
        "gpuModelPciTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "minVcpuPerMemoryGib": {
          "type": "number",
          "format": "double"
        },
        "maxVcpuPerMemoryGib": {
          "type": "number",
          "format": "double"
        },
        "minVcpuPerGpu": {
          "type": "number",
          "format": "double"
        },
        "maxVcpuPerGpu": {
          "type": "number",
          "format": "double"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "hostCount": {
          "type": "integer",
          "format": "int32"
        },
        "hostProblemCount": {
          "type": "integer",
          "format": "int32"
        },
        "vmCount": {
          "type": "integer",
          "format": "int32"
        },
        "vcpuFree": {
          "type": "integer",
          "format": "int32"
        },
        "vcpuUsed": {
          "type": "integer",
          "format": "int32"
        },
        "memoryGibFree": {
          "type": "integer",
          "format": "int32"
        },
        "memoryGibUsed": {
          "type": "integer",
          "format": "int32"
        },
        "gpuFree": {
          "type": "integer",
          "format": "int32"
        },
        "gpuUsed": {
          "type": "integer",
          "format": "int32"
        },
        "minVcpu": {
          "type": "number",
          "format": "double"
        },
        "minMemoryGib": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "machineType",
        "cpuModel",
        "vcpuPerCpuThread",
        "vcpuPriceHr",
        "memoryGibPriceHr",
        "gpuModel",
        "gpuModelId",
        "gpuModelPciTypes",
        "gpuPriceHr",
        "minVcpuPerMemoryGib",
        "maxVcpuPerMemoryGib",
        "minVcpuPerGpu",
        "maxVcpuPerGpu",
        "createTime",
        "updateTime",
        "hostCount",
        "hostProblemCount",
        "vmCount",
        "vcpuFree",
        "vcpuUsed",
        "memoryGibFree",
        "memoryGibUsed",
        "gpuFree",
        "gpuUsed",
        "minVcpu",
        "minMemoryGib"
      ]
    },
    "ConnectVMResponse": {
      "type": "object",
      "properties": {
        "connectUrl": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "required": [
        "connectUrl",
        "token"
      ]
    },
    "CountHostsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "CountVMsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "count"
      ]
    },
    "CpuTopology": {
      "type": "object",
      "properties": {
        "sockets": {
          "type": "integer",
          "format": "int32"
        },
        "cores": {
          "type": "integer",
          "format": "int32"
        },
        "threads": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CreateBillingAccountCreditPaymentResponse": {
      "type": "object",
      "properties": {
        "paymentIntent": {
          "$ref": "#/definitions/PaymentIntent"
        }
      },
      "required": [
        "paymentIntent"
      ]
    },
    "CreateBillingAccountRequest": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "invoiceName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "taxId": {
          "$ref": "#/definitions/TaxId"
        },
        "referral": {
          "type": "string"
        },
        "billingAddress": {
          "$ref": "#/definitions/BillingAddress"
        }
      },
      "required": [
        "displayName",
        "email"
      ]
    },
    "CreateDiskSnapshotBody": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string"
        },
        "vmId": {
          "type": "string"
        }
      },
      "required": [
        "snapshotId",
        "vmId"
      ]
    },
    "CreateDiskSnapshotResponse": {
      "type": "object"
    },
    "CreateNetworkBody": {
      "type": "object",
      "properties": {
        "dataCenterId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "string"
        },
        "vrouterSize": {
          "$ref": "#/definitions/v1.VRouterSize"
        }
      },
      "required": [
        "dataCenterId",
        "id",
        "cidrPrefix"
      ]
    },
    "CreateNetworkResponse": {
      "type": "object"
    },
    "CreateObjectStorageUserBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "CreatePrivateVMImageResponse": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/PrivateImage"
        }
      }
    },
    "CreateSecurityGroupResponse": {
      "type": "object",
      "properties": {
        "securityGroup": {
          "$ref": "#/definitions/SecurityGroup"
        }
      },
      "required": [
        "securityGroup"
      ]
    },
    "CreateStorageDiskBody": {
      "type": "object",
      "properties": {
        "dataCenterId": {
          "type": "string"
        },
        "disk": {
          "$ref": "#/definitions/Disk"
        }
      }
    },
    "CreateStorageDiskResponse": {
      "type": "object"
    },
    "CreateVMBody": {
      "type": "object",
      "properties": {
        "dataCenterId": {
          "type": "string"
        },
        "machineType": {
          "type": "string"
        },
        "vmId": {
          "type": "string"
        },
        "startScript": {
          "type": "string"
        },
        "sshKeySource": {
          "$ref": "#/definitions/SshKeySource"
        },
        "customSshKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "password": {
          "type": "string"
        },
        "bootDisk": {
          "$ref": "#/definitions/Disk"
        },
        "bootDiskImageId": {
          "type": "string"
        },
        "vcpus": {
          "type": "integer",
          "format": "int32"
        },
        "memoryGib": {
          "type": "integer",
          "format": "int32"
        },
        "gpus": {
          "type": "integer",
          "format": "int32"
        },
        "cpuModel": {
          "type": "string"
        },
        "gpuModel": {
          "type": "string"
        },
        "gpuModelId": {
          "type": "string"
        },
        "nics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CreateVMRequest.NIC"
          }
        },
        "securityGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ignored if any nics are provided"
        },
        "storageDiskIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "topology": {
          "$ref": "#/definitions/CpuTopology"
        },
        "validateOnly": {
          "type": "boolean"
        },
        "expireTime": {
          "type": "string",
          "format": "date-time"
        },
        "ttl": {
          "type": "string"
        }
      },
      "required": [
        "dataCenterId",
        "machineType",
        "vmId",
        "bootDiskImageId",
        "vcpus",
        "memoryGib",
        "gpus"
      ]
    },
    "CreateVMRequest.NIC": {
      "type": "object",
      "properties": {
        "networkId": {
          "type": "string"
        },
        "assignPublicIp": {
          "type": "boolean"
        },
        "securityGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateVMResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "vm": {
          "$ref": "#/definitions/VM"
        }
      },
      "required": [
        "id"
      ]
    },
    "CreditBalanceRecharge": {
      "type": "object",
      "properties": {
        "low": {
          "$ref": "#/definitions/Decimal"
        },
        "high": {
          "$ref": "#/definitions/Decimal"
        },
        "autoRecharge": {
          "type": "boolean"
        },
        "transaction": {
          "$ref": "#/definitions/Transaction",
          "readOnly": true
        }
      },
      "required": [
        "low",
        "high",
        "autoRecharge"
      ]
    },
    "CreditBalanceTransaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/Decimal"
        },
        "description": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "amount",
        "description",
        "createTime"
      ]
    },
    "DataCenterMachineType": {
      "type": "object",
      "properties": {
        "machineType": {
          "type": "string"
        },
        "countClusters": {
          "type": "integer",
          "format": "int32"
        },
        "countHosts": {
          "type": "integer",
          "format": "int32"
        },
        "countHostsActive": {
          "type": "integer",
          "format": "int32"
        },
        "countHostsInactive": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "machineType",
        "countClusters",
        "countHosts",
        "countHostsActive",
        "countHostsInactive"
      ]
    },
    "DataCenterRevenueResource": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "quantity": {
          "$ref": "#/definitions/Decimal"
        },
        "unit": {
          "type": "string"
        },
        "revenueUsd": {
          "$ref": "#/definitions/Decimal"
        }
      },
      "required": [
        "resourceType",
        "resourceId",
        "quantity",
        "unit",
        "revenueUsd"
      ]
    },
    "DataCenterTimeRevenue": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "revenueUsd": {
          "$ref": "#/definitions/Decimal"
        }
      },
      "required": [
        "time",
        "revenueUsd"
      ]
    },
    "Decimal": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The decimal value, as a string.\n\nThe string representation consists of an optional sign, `+` (`U+002B`)\nor `-` (`U+002D`), followed by a sequence of zero or more decimal digits\n(\"the integer\"), optionally followed by a fraction, optionally followed\nby an exponent.\n\nThe fraction consists of a decimal point followed by zero or more decimal\ndigits. The string must contain at least one digit in either the integer\nor the fraction. The number formed by the sign, the integer and the\nfraction is referred to as the significand.\n\nThe exponent consists of the character `e` (`U+0065`) or `E` (`U+0045`)\nfollowed by one or more decimal digits.\n\nServices **should** normalize decimal values before storing them by:\n\n  - Removing an explicitly-provided `+` sign (`+2.5` -\u003e `2.5`).\n  - Replacing a zero-length integer value with `0` (`.5` -\u003e `0.5`).\n  - Coercing the exponent character to lower-case (`2.5E8` -\u003e `2.5e8`).\n  - Removing an explicitly-provided zero exponent (`2.5e0` -\u003e `2.5`).\n\nServices **may** perform additional normalization based on its own needs\nand the internal decimal implementation selected, such as shifting the\ndecimal point and exponent value together (example: `2.5e-1` \u003c-\u003e `0.25`).\nAdditionally, services **may** preserve trailing zeroes in the fraction\nto indicate increased precision, but are not required to do so.\n\nNote that only the `.` character is supported to divide the integer\nand the fraction; `,` **should not** be supported regardless of locale.\nAdditionally, thousand separators **should not** be supported. If a\nservice does support them, values **must** be normalized.\n\nThe ENBF grammar is:\n\n    DecimalString =\n      [Sign] Significand [Exponent];\n\n    Sign = '+' | '-';\n\n    Significand =\n      Digits ['.'] [Digits] | [Digits] '.' Digits;\n\n    Exponent = ('e' | 'E') [Sign] Digits;\n\n    Digits = { '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' };\n\nServices **should** clearly document the range of supported values, the\nmaximum supported precision (total number of digits), and, if applicable,\nthe scale (number of digits after the decimal point), as well as how it\nbehaves when receiving out-of-bounds values.\n\nServices **may** choose to accept values passed as input even when the\nvalue has a higher precision or scale than the service supports, and\n**should** round the value to fit the supported scale. Alternatively, the\nservice **may** error with `400 Bad Request` (`INVALID_ARGUMENT` in gRPC)\nif precision would be lost.\n\nServices **should** error with `400 Bad Request` (`INVALID_ARGUMENT` in\ngRPC) if the service receives a value outside of the supported range."
        }
      },
      "description": "A representation of a decimal value, such as 2.5. Clients may convert values\ninto language-native decimal formats, such as Java's [BigDecimal][] or\nPython's [decimal.Decimal][].\n\n[BigDecimal]:\nhttps://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html\n[decimal.Decimal]: https://docs.python.org/3/library/decimal.html"
    },
    "DeleteDiskSnapshotResponse": {
      "type": "object"
    },
    "DeleteNetworkResponse": {
      "type": "object"
    },
    "DeleteObjectStorageKeyResponse": {
      "type": "object"
    },
    "DeleteObjectStorageUserResponse": {
      "type": "object"
    },
    "DeletePrivateVMImageResponse": {
      "type": "object"
    },
    "DeleteSecurityGroupResponse": {
      "type": "object"
    },
    "DeleteStorageDiskResponse": {
      "type": "object"
    },
    "DetachSecurityGroupResponse": {
      "type": "object"
    },
    "DetachStorageDiskResponse": {
      "type": "object"
    },
    "Disk": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "readOnly": true
        },
        "dataCenterId": {
          "type": "string",
          "readOnly": true
        },
        "vmId": {
          "type": "string",
          "readOnly": true
        },
        "sizeGib": {
          "type": "integer",
          "format": "int32"
        },
        "storageClass": {
          "$ref": "#/definitions/Disk.StorageClass"
        },
        "diskType": {
          "$ref": "#/definitions/DiskType",
          "readOnly": true
        },
        "publicImageId": {
          "type": "string",
          "readOnly": true
        },
        "privateImageId": {
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "diskState": {
          "$ref": "#/definitions/DiskState",
          "readOnly": true
        }
      },
      "required": [
        "id",
        "sizeGib"
      ]
    },
    "Disk.StorageClass": {
      "type": "string",
      "enum": [
        "STORAGE_CLASS_UNKNOWN",
        "STORAGE_CLASS_LOCAL",
        "STORAGE_CLASS_NETWORK"
      ],
      "default": "STORAGE_CLASS_UNKNOWN"
    },
    "DiskResult": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "sizeGib": {
          "type": "integer",
          "format": "int32"
        },
        "publicImageId": {
          "type": "string"
        },
        "privateImageId": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/DiskType"
        },
        "state": {
          "$ref": "#/definitions/DiskState"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DiskState": {
      "type": "string",
      "enum": [
        "DISK_STATE_INIT",
        "DISK_STATE_READY",
        "DISK_STATE_USED",
        "DISK_STATE_DISABLED",
        "DISK_STATE_LOCKED",
        "DISK_STATE_ERROR",
        "DISK_STATE_CLONE",
        "DISK_STATE_DELETE"
      ],
      "default": "DISK_STATE_INIT"
    },
    "DiskStoragePriceHr": {
      "type": "object",
      "properties": {
        "storageClass": {
          "$ref": "#/definitions/VMDataCenter.StorageClass"
        },
        "diskGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "snapshotGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        }
      }
    },
    "DiskType": {
      "type": "string",
      "enum": [
        "DISK_TYPE_UNKNOWN",
        "DISK_TYPE_BOOT",
        "DISK_TYPE_STORAGE"
      ],
      "default": "DISK_TYPE_UNKNOWN"
    },
    "GenerateApiKeyRequest": {
      "type": "object",
      "properties": {
        "apikeyId": {
          "type": "string",
          "description": "The identifier to use for the api key, which will become the final component of\nthe api key's resource name.\nThis value should be 4-63 characters, and valid characters\nare /[a-z][0-9]-/."
        }
      },
      "required": [
        "apikeyId"
      ]
    },
    "GetBillingAccountDetailsResponse": {
      "type": "object",
      "properties": {
        "billingAccount": {
          "$ref": "#/definitions/BillingAccount"
        },
        "stripeCustomer": {
          "$ref": "#/definitions/StripeCustomer"
        }
      },
      "required": [
        "billingAccount",
        "stripeCustomer"
      ]
    },
    "GetBillingAccountSpendDetailsResponse": {
      "type": "object",
      "properties": {
        "spend": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BillingAccountSpendRow"
          }
        }
      },
      "required": [
        "spend"
      ]
    },
    "GetDataCenterLiveUtilizationResponse": {
      "type": "object",
      "properties": {
        "utilization": {
          "type": "number",
          "format": "float"
        },
        "vcpuUsed": {
          "type": "integer",
          "format": "int32"
        },
        "vcpuFree": {
          "type": "integer",
          "format": "int32"
        },
        "vcpuTotal": {
          "type": "integer",
          "format": "int32"
        },
        "cpuUtilization": {
          "type": "number",
          "format": "float"
        },
        "memoryGibUsed": {
          "type": "integer",
          "format": "int32"
        },
        "memoryGibFree": {
          "type": "integer",
          "format": "int32"
        },
        "memoryGibTotal": {
          "type": "integer",
          "format": "int32"
        },
        "memoryUtilization": {
          "type": "number",
          "format": "float"
        },
        "gpuUsed": {
          "type": "integer",
          "format": "int32"
        },
        "gpuFree": {
          "type": "integer",
          "format": "int32"
        },
        "gpuTotal": {
          "type": "integer",
          "format": "int32"
        },
        "gpuUtilization": {
          "type": "number",
          "format": "float"
        },
        "ipv4Used": {
          "type": "integer",
          "format": "int32"
        },
        "ipv4Free": {
          "type": "integer",
          "format": "int32"
        },
        "ipv4Total": {
          "type": "integer",
          "format": "int32"
        },
        "ipv4Utilization": {
          "type": "number",
          "format": "float"
        },
        "storageGibUsed": {
          "type": "integer",
          "format": "int32"
        },
        "storageGibFree": {
          "type": "integer",
          "format": "int32"
        },
        "storageGibTotal": {
          "type": "integer",
          "format": "int32"
        },
        "storageUtilization": {
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "utilization",
        "vcpuUsed",
        "vcpuFree",
        "vcpuTotal",
        "cpuUtilization",
        "memoryGibUsed",
        "memoryGibFree",
        "memoryGibTotal",
        "memoryUtilization",
        "gpuUsed",
        "gpuFree",
        "gpuTotal",
        "gpuUtilization",
        "ipv4Used",
        "ipv4Free",
        "ipv4Total",
        "ipv4Utilization",
        "storageGibUsed",
        "storageGibFree",
        "storageGibTotal",
        "storageUtilization"
      ]
    },
    "GetDataCenterRevenueByResourceResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DataCenterRevenueResource"
          }
        }
      },
      "required": [
        "resources"
      ]
    },
    "GetDataCenterRevenueTimeSeriesResponse": {
      "type": "object",
      "properties": {
        "timeRevenue": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DataCenterTimeRevenue"
          }
        }
      },
      "required": [
        "timeRevenue"
      ]
    },
    "GetDiskResponse": {
      "type": "object",
      "properties": {
        "disk": {
          "$ref": "#/definitions/Disk"
        },
        "snapshots": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Snapshot"
          }
        }
      }
    },
    "GetMachineTypeLiveUtilizationResponse": {
      "type": "object",
      "properties": {
        "utilization": {
          "type": "number",
          "format": "float"
        },
        "vcpuUsed": {
          "type": "integer",
          "format": "int32"
        },
        "vcpuFree": {
          "type": "integer",
          "format": "int32"
        },
        "vcpuTotal": {
          "type": "integer",
          "format": "int32"
        },
        "cpuUtilization": {
          "type": "number",
          "format": "float"
        },
        "memoryGibUsed": {
          "type": "integer",
          "format": "int32"
        },
        "memoryGibFree": {
          "type": "integer",
          "format": "int32"
        },
        "memoryGibTotal": {
          "type": "integer",
          "format": "int32"
        },
        "memoryUtilization": {
          "type": "number",
          "format": "float"
        },
        "gpuUsed": {
          "type": "integer",
          "format": "int32"
        },
        "gpuFree": {
          "type": "integer",
          "format": "int32"
        },
        "gpuTotal": {
          "type": "integer",
          "format": "int32"
        },
        "gpuUtilization": {
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "utilization",
        "vcpuUsed",
        "vcpuFree",
        "vcpuTotal",
        "cpuUtilization",
        "memoryGibUsed",
        "memoryGibFree",
        "memoryGibTotal",
        "memoryUtilization",
        "gpuUsed",
        "gpuFree",
        "gpuTotal",
        "gpuUtilization"
      ]
    },
    "GetMachineTypeResponse": {
      "type": "object",
      "properties": {
        "dataCenterId": {
          "type": "string"
        },
        "machineType": {
          "type": "string"
        },
        "cpuModels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gpuModels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "minVcpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "maxVcpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "minMemoryGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "maxMemoryGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "minGpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "maxGpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "minVcpuPerMemoryGib": {
          "type": "number",
          "format": "double"
        },
        "maxVcpuPerMemoryGib": {
          "type": "number",
          "format": "double"
        },
        "minVcpuPerGpu": {
          "type": "number",
          "format": "double"
        },
        "maxVcpuPerGpu": {
          "type": "number",
          "format": "double"
        },
        "countClusters": {
          "type": "integer",
          "format": "int32"
        },
        "countHosts": {
          "type": "integer",
          "format": "int32"
        },
        "countHostsActive": {
          "type": "integer",
          "format": "int32"
        },
        "countHostsInactive": {
          "type": "integer",
          "format": "int32"
        },
        "minVcpu": {
          "type": "number",
          "format": "double"
        },
        "minMemoryGib": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "dataCenterId",
        "machineType",
        "cpuModels",
        "gpuModels",
        "minVcpuPriceHr",
        "maxVcpuPriceHr",
        "minMemoryGibPriceHr",
        "maxMemoryGibPriceHr",
        "minGpuPriceHr",
        "maxGpuPriceHr",
        "minVcpuPerMemoryGib",
        "maxVcpuPerMemoryGib",
        "minVcpuPerGpu",
        "maxVcpuPerGpu",
        "countClusters",
        "countHosts",
        "countHostsActive",
        "countHostsInactive",
        "minVcpu",
        "minMemoryGib"
      ]
    },
    "GetNetworkResponse": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        }
      },
      "required": [
        "network"
      ]
    },
    "GetObjectStorageSessionKeyResponse": {
      "type": "object",
      "properties": {
        "sessionName": {
          "type": "string"
        },
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "sessionToken": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        }
      }
    },
    "GetPrivateVMImageResponse": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/PrivateImage"
        }
      }
    },
    "GetResponse": {
      "type": "object",
      "properties": {
        "task": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Task"
          }
        }
      },
      "required": [
        "task"
      ]
    },
    "GetSecurityGroupResponse": {
      "type": "object",
      "properties": {
        "securityGroup": {
          "$ref": "#/definitions/SecurityGroup"
        }
      },
      "required": [
        "securityGroup"
      ]
    },
    "GetVMResponse": {
      "type": "object",
      "properties": {
        "VM": {
          "$ref": "#/definitions/VM"
        },
        "vcpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "totalVcpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "memoryGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "totalMemoryPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "gpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "totalGpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "storageGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "totalStoragePriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "ipv4PriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "totalPriceHr": {
          "$ref": "#/definitions/Decimal"
        }
      },
      "required": [
        "VM",
        "vcpuPriceHr",
        "totalVcpuPriceHr",
        "memoryGibPriceHr",
        "totalMemoryPriceHr",
        "gpuPriceHr",
        "totalGpuPriceHr",
        "storageGibPriceHr",
        "totalStoragePriceHr",
        "ipv4PriceHr",
        "totalPriceHr"
      ]
    },
    "GpuModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "vendorName": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        },
        "memoryGib": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "id",
        "vendorName",
        "modelName",
        "memoryGib"
      ]
    },
    "Host": {
      "type": "object",
      "properties": {
        "machineType": {
          "type": "string"
        },
        "cpuModel": {
          "type": "string"
        },
        "vcpuPerCpuThread": {
          "type": "integer",
          "format": "int32"
        },
        "gpuModel": {
          "type": "string"
        },
        "gpuModelId": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "vmCount": {
          "type": "integer",
          "format": "int32"
        },
        "vcpuFree": {
          "type": "integer",
          "format": "int32"
        },
        "vcpuUsed": {
          "type": "integer",
          "format": "int32"
        },
        "memoryGibFree": {
          "type": "integer",
          "format": "int32"
        },
        "memoryGibUsed": {
          "type": "integer",
          "format": "int32"
        },
        "gpuFree": {
          "type": "integer",
          "format": "int32"
        },
        "gpuUsed": {
          "type": "integer",
          "format": "int32"
        },
        "online": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "machineType",
        "cpuModel",
        "vcpuPerCpuThread",
        "gpuModel",
        "gpuModelId",
        "createTime",
        "updateTime",
        "vmCount",
        "vcpuFree",
        "vcpuUsed",
        "memoryGibFree",
        "memoryGibUsed",
        "gpuFree",
        "gpuUsed",
        "online",
        "name"
      ]
    },
    "IdentityVerificationSession": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        }
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "sizeGib": {
          "type": "integer",
          "format": "int32"
        },
        "installedPackages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Package"
          }
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "displayName",
        "platform",
        "sizeGib",
        "installedPackages"
      ]
    },
    "ImageResult": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "sizeGib": {
          "type": "integer",
          "format": "int32"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Interval": {
      "type": "string",
      "enum": [
        "INTERVAL_UNKNOWN",
        "INTERVAL_DAY",
        "INTERVAL_WEEK",
        "INTERVAL_MONTH"
      ],
      "default": "INTERVAL_UNKNOWN"
    },
    "Invoice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "amountDue": {
          "type": "string",
          "format": "int64"
        },
        "amountPaid": {
          "type": "string",
          "format": "int64"
        },
        "amountRemaining": {
          "type": "string",
          "format": "int64"
        },
        "created": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "hostedInvoiceUrl": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "int64"
        },
        "paidDate": {
          "type": "string",
          "format": "int64"
        },
        "billingReason": {
          "type": "string"
        },
        "autoAdvance": {
          "type": "boolean"
        },
        "periodStart": {
          "type": "string",
          "format": "int64"
        },
        "periodEnd": {
          "type": "string",
          "format": "int64"
        },
        "number": {
          "type": "string"
        },
        "subtotalExcludingTax": {
          "type": "string",
          "format": "int64"
        },
        "subtotal": {
          "type": "string",
          "format": "int64"
        },
        "totalExcludingTax": {
          "type": "string",
          "format": "int64"
        },
        "tax": {
          "type": "string",
          "format": "int64"
        },
        "total": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "LastPaymentError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "declineCode": {
          "type": "string"
        }
      },
      "required": [
        "code",
        "declineCode"
      ]
    },
    "ListApiKeysResponse": {
      "type": "object",
      "properties": {
        "apiKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ApiKey"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "apiKeys",
        "totalCount",
        "pageNumber",
        "pageSize"
      ]
    },
    "ListBillingAccountCreditBalanceTransactionsResponse": {
      "type": "object",
      "properties": {
        "creditBalanceTransactions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CreditBalanceTransaction"
          }
        },
        "hasMore": {
          "type": "boolean"
        }
      },
      "required": [
        "creditBalanceTransactions",
        "hasMore"
      ]
    },
    "ListBillingAccountInvoicesResponse": {
      "type": "object",
      "properties": {
        "invoices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Invoice"
          }
        },
        "hasMore": {
          "type": "boolean"
        }
      },
      "required": [
        "invoices",
        "hasMore"
      ]
    },
    "ListBillingAccountProjectsResponse": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BillingAccountProject"
          },
          "title": "string page_token = 2 [(google.api.field_behavior) = REQUIRED];\n int32 page_size = 3 [(google.api.field_behavior) = REQUIRED];"
        }
      },
      "required": [
        "projects"
      ]
    },
    "ListBillingAccountTransactionsResponse": {
      "type": "object",
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Transaction"
          }
        },
        "hasMore": {
          "type": "boolean"
        }
      },
      "required": [
        "transactions",
        "hasMore"
      ]
    },
    "ListBillingAccountsResponse": {
      "type": "object",
      "properties": {
        "billingAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BillingAccount"
          }
        },
        "pageToken": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "billingAccounts",
        "pageToken",
        "pageSize"
      ]
    },
    "ListClustersResponse": {
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Cluster"
          }
        }
      },
      "required": [
        "clusters"
      ]
    },
    "ListDataCenterMachineTypePricesResponse": {
      "type": "object",
      "properties": {
        "prices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/MachineTypePrice"
          }
        }
      },
      "required": [
        "prices"
      ]
    },
    "ListDataCentersResponse": {
      "type": "object",
      "properties": {
        "dataCenters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1.DataCenter"
          }
        },
        "pageToken": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "dataCenters",
        "pageToken",
        "pageSize"
      ]
    },
    "ListDiskSnapshotsResponse": {
      "type": "object",
      "properties": {
        "snapshots": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Snapshot"
          }
        }
      },
      "required": [
        "snapshots"
      ]
    },
    "ListDisksResponse": {
      "type": "object",
      "properties": {
        "disks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Disk"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "totalCount",
        "pageNumber",
        "pageSize"
      ]
    },
    "ListHostsResponse": {
      "type": "object",
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Host"
          }
        }
      },
      "required": [
        "hosts"
      ]
    },
    "ListMachineTypesResponse": {
      "type": "object",
      "properties": {
        "machineTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DataCenterMachineType"
          }
        }
      },
      "required": [
        "machineTypes"
      ]
    },
    "ListNetworksResponse": {
      "type": "object",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Network"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "networks",
        "totalCount",
        "pageNumber",
        "pageSize"
      ]
    },
    "ListObjectStorageBucketsResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ObjectStorageBucket"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "buckets",
        "totalCount",
        "pageNumber",
        "pageSize"
      ]
    },
    "ListObjectStorageKeysResponse": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ObjectStorageKey"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "keys",
        "totalCount",
        "pageNumber",
        "pageSize"
      ]
    },
    "ListObjectStorageUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ObjectStorageUser"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "users",
        "totalCount",
        "pageNumber",
        "pageSize"
      ]
    },
    "ListOutstandingInvoicesResponse": {
      "type": "object",
      "properties": {
        "invoices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Invoice"
          }
        }
      },
      "required": [
        "invoices"
      ]
    },
    "ListPrivateVMImagesResponse": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PrivateImage"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "totalCount",
        "pageNumber",
        "pageSize"
      ]
    },
    "ListProjectSshKeysResponse": {
      "type": "object",
      "properties": {
        "sshKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SshKey"
          }
        }
      },
      "required": [
        "sshKeys"
      ]
    },
    "ListProjectsResponse": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Project"
          }
        },
        "pageToken": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "projects",
        "pageToken",
        "pageSize"
      ]
    },
    "ListPublicVMImagesResponse": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Image"
          }
        }
      },
      "required": [
        "images"
      ]
    },
    "ListRegionsResponse": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Region"
          }
        }
      },
      "required": [
        "regions"
      ]
    },
    "ListSecurityGroupsResponse": {
      "type": "object",
      "properties": {
        "securityGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SecurityGroup"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "securityGroups",
        "totalCount",
        "pageNumber",
        "pageSize"
      ]
    },
    "ListSshKeysResponse": {
      "type": "object",
      "properties": {
        "sshKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SshKey"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "sshKeys",
        "totalCount",
        "pageNumber",
        "pageSize"
      ]
    },
    "ListUserPermissionsResponse": {
      "type": "object",
      "properties": {
        "projectPermissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UserPermission"
          }
        },
        "dataCenterPermissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UserPermission"
          }
        },
        "billingAccountPermissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UserPermission"
          }
        }
      },
      "required": [
        "projectPermissions",
        "dataCenterPermissions",
        "billingAccountPermissions"
      ]
    },
    "ListVMDataCentersResponse": {
      "type": "object",
      "properties": {
        "dataCenters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VMDataCenter"
          }
        }
      },
      "required": [
        "dataCenters"
      ]
    },
    "ListVMDisksResponse": {
      "type": "object",
      "properties": {
        "disks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Disk"
          }
        }
      }
    },
    "ListVMGpuModelsResponse": {
      "type": "object",
      "properties": {
        "gpuModels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GpuModel"
          }
        }
      }
    },
    "ListVMMachineTypes2Response": {
      "type": "object",
      "properties": {
        "machineTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VMMachineType"
          }
        }
      },
      "required": [
        "machineTypes"
      ]
    },
    "ListVMsResponse": {
      "type": "object",
      "properties": {
        "VMs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VM"
          }
        }
      }
    },
    "MachineTypePrice": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "machineType": {
          "type": "string"
        },
        "commitmentTerm": {
          "type": "string"
        },
        "gpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "vcpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "memoryGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "bootDiskGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "ipv4PriceHr": {
          "$ref": "#/definitions/Decimal"
        }
      },
      "required": [
        "uid",
        "machineType",
        "commitmentTerm",
        "gpuPriceHr",
        "vcpuPriceHr",
        "memoryGibPriceHr",
        "bootDiskGibPriceHr",
        "ipv4PriceHr"
      ]
    },
    "MonitorVMResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VMMonitoringItem"
          }
        }
      },
      "required": [
        "items"
      ]
    },
    "Network": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "ipRange": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "size": {
          "$ref": "#/definitions/v1.VRouterSize"
        },
        "priceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "externalIpAddress": {
          "type": "string"
        },
        "internalIpAddress": {
          "type": "string"
        },
        "shortState": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/NetworkState"
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "required": [
        "id",
        "dataCenterId",
        "ipRange",
        "gateway",
        "size",
        "priceHr",
        "externalIpAddress",
        "internalIpAddress",
        "shortState",
        "state",
        "createTime"
      ]
    },
    "NetworkPriceHr": {
      "type": "object",
      "properties": {
        "size": {
          "$ref": "#/definitions/VMDataCenter.VRouterSize"
        },
        "priceHr": {
          "$ref": "#/definitions/Decimal"
        }
      }
    },
    "NetworkResult": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "ipRange": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "internalIpAddress": {
          "type": "string"
        },
        "externalIpAddress": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/NetworkState"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "NetworkState": {
      "type": "string",
      "enum": [
        "CLONING",
        "CREATING_SNAPSHOT",
        "DELETED",
        "DELETING",
        "DELETING_SNAPSHOT",
        "FAILED",
        "HOTPLUGGING",
        "MIGRATING",
        "RECREATING",
        "REVERTING_SNAPSHOT",
        "RESIZING",
        "RESIZING_DISK",
        "ACTIVE",
        "STARTING",
        "STOPPED",
        "STOPPING",
        "SUSPENDED",
        "SUSPENDING",
        "UNKNOWN"
      ],
      "default": "CLONING"
    },
    "ObjectStorageBucket": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "objectCount": {
          "type": "string",
          "format": "int64"
        },
        "sizeBytes": {
          "type": "string",
          "format": "int64"
        },
        "billableBytes": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ObjectStorageKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "createBy": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ObjectStorageUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "keyCount": {
          "type": "integer",
          "format": "int32"
        },
        "createBy": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Package": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "description",
        "version"
      ]
    },
    "PaymentIntent": {
      "type": "object",
      "properties": {
        "clientSecret": {
          "type": "string"
        }
      },
      "required": [
        "clientSecret"
      ]
    },
    "PaymentMethodCard": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "expMonth": {
          "type": "string",
          "format": "int64"
        },
        "expYear": {
          "type": "string",
          "format": "int64"
        },
        "fingerprint": {
          "type": "string"
        },
        "last4": {
          "type": "string"
        }
      }
    },
    "PaymentMethodPaypal": {
      "type": "object",
      "properties": {
        "payerEmail": {
          "type": "string"
        },
        "payerId": {
          "type": "string"
        }
      }
    },
    "PaymentTerms": {
      "type": "string",
      "enum": [
        "PAYMENT_TERMS_UNSPECIFIED",
        "PAYMENT_TERMS_PREPAID",
        "PAYMENT_TERMS_INVOICE"
      ],
      "default": "PAYMENT_TERMS_UNSPECIFIED"
    },
    "Point": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lng": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PrivateImage": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sizeGib": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        }
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "billingAccountId": {
          "type": "string"
        },
        "resourceCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "createBy": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "id",
        "billingAccountId"
      ]
    },
    "ProjectResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "resourceCount": {
          "type": "integer",
          "format": "int32"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RebootVMResponse": {
      "type": "object"
    },
    "Region": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "dataCenters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Region.DataCenter"
          }
        }
      }
    },
    "Region.DataCenter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "RemoveBillingAccountPaymentMethodResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "paymentMethodId"
      ]
    },
    "RemoveBillingAccountUserPermissionBody": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role"
        }
      },
      "required": [
        "userId",
        "role"
      ]
    },
    "RemoveDataCenterUserPermissionBody": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "billingAccountId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role"
        }
      },
      "required": [
        "userId",
        "role"
      ]
    },
    "RemoveProjectUserPermissionBody": {
      "type": "object",
      "properties": {
        "dataCenterId": {
          "type": "string"
        },
        "billingAccountId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role"
        }
      },
      "required": [
        "userId",
        "role"
      ]
    },
    "ResizeVMDiskResponse": {
      "type": "object"
    },
    "ResizeVMResponse": {
      "type": "object",
      "properties": {
        "vm": {
          "$ref": "#/definitions/VM"
        }
      },
      "required": [
        "vm"
      ]
    },
    "Result": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "float"
        },
        "billingAccount": {
          "$ref": "#/definitions/BillingAccountResult"
        },
        "project": {
          "$ref": "#/definitions/ProjectResult"
        },
        "virtualMachine": {
          "$ref": "#/definitions/VirtualMachineResult"
        },
        "disk": {
          "$ref": "#/definitions/DiskResult"
        },
        "image": {
          "$ref": "#/definitions/ImageResult"
        },
        "network": {
          "$ref": "#/definitions/NetworkResult"
        }
      }
    },
    "RevertDiskResponse": {
      "type": "object"
    },
    "Role": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "OWNER",
        "VIEWER",
        "EDITOR"
      ],
      "default": "UNKNOWN"
    },
    "Rule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/Rule.Protocol"
        },
        "ports": {
          "type": "string"
        },
        "ruleType": {
          "$ref": "#/definitions/Rule.RuleType"
        },
        "ipRangeCidr": {
          "type": "string",
          "title": "single IP or CIDR format range to apply rule to"
        },
        "icmpType": {
          "type": "string"
        }
      }
    },
    "Rule.Protocol": {
      "type": "string",
      "enum": [
        "PROTOCOL_UNKNOWN",
        "PROTOCOL_ALL",
        "PROTOCOL_TCP",
        "PROTOCOL_UDP",
        "PROTOCOL_ICMP",
        "PROTOCOL_ICMPv6",
        "PROTOCOL_IPSEC"
      ],
      "default": "PROTOCOL_UNKNOWN"
    },
    "Rule.RuleType": {
      "type": "string",
      "enum": [
        "RULE_TYPE_UNKNOWN",
        "RULE_TYPE_INBOUND",
        "RULE_TYPE_OUTBOUND"
      ],
      "default": "RULE_TYPE_UNKNOWN"
    },
    "SearchResourcesResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Result"
          }
        }
      }
    },
    "SecurityGroup": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Rule"
          }
        }
      },
      "required": [
        "dataCenterId",
        "id"
      ]
    },
    "SecurityGroupRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/SecurityGroupRule.Protocol"
        },
        "ports": {
          "type": "string"
        },
        "ruleType": {
          "$ref": "#/definitions/SecurityGroupRule.RuleType"
        },
        "ipRangeCidr": {
          "type": "string",
          "title": "single IP or CIDR format range to apply rule to"
        },
        "icmpType": {
          "type": "string"
        }
      }
    },
    "SecurityGroupRule.Protocol": {
      "type": "string",
      "enum": [
        "PROTOCOL_UNKNOWN",
        "PROTOCOL_ALL",
        "PROTOCOL_TCP",
        "PROTOCOL_UDP",
        "PROTOCOL_ICMP",
        "PROTOCOL_ICMPv6",
        "PROTOCOL_IPSEC"
      ],
      "default": "PROTOCOL_UNKNOWN"
    },
    "SecurityGroupRule.RuleType": {
      "type": "string",
      "enum": [
        "RULE_TYPE_UNKNOWN",
        "RULE_TYPE_INBOUND",
        "RULE_TYPE_OUTBOUND"
      ],
      "default": "RULE_TYPE_UNKNOWN"
    },
    "SetBillingAccountDefaultPaymentMethodResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "paymentMethodId": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "paymentMethodId"
      ]
    },
    "Snapshot": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "sizeGib": {
          "type": "integer",
          "format": "int32"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SshKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "publicKey": {
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "comment": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "publicKey"
      ]
    },
    "SshKeySource": {
      "type": "string",
      "enum": [
        "SSH_KEY_SOURCE_UNKNOWN",
        "SSH_KEY_SOURCE_PROJECT",
        "SSH_KEY_SOURCE_USER",
        "SSH_KEY_SOURCE_NONE"
      ],
      "default": "SSH_KEY_SOURCE_UNKNOWN"
    },
    "StartNetworkResponse": {
      "type": "object"
    },
    "StartVMResponse": {
      "type": "object"
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobuf.Any"
          }
        }
      }
    },
    "StopNetworkResponse": {
      "type": "object"
    },
    "StopVMResponse": {
      "type": "object"
    },
    "StripeCustomer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "balance": {
          "$ref": "#/definitions/Decimal"
        }
      }
    },
    "SyncResponse": {
      "type": "object"
    },
    "Task": {
      "type": "object",
      "properties": {
        "taskName": {
          "type": "string"
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "string"
        }
      }
    },
    "TaxId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TerminateVMResponse": {
      "type": "object"
    },
    "TrackRequest": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/Decimal"
        },
        "description": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "succeeded": {
          "type": "boolean"
        },
        "latestCharge": {
          "$ref": "#/definitions/Charge"
        },
        "lastPaymentError": {
          "$ref": "#/definitions/LastPaymentError"
        }
      },
      "required": [
        "id",
        "amount",
        "description",
        "createTime",
        "status",
        "succeeded",
        "latestCharge",
        "lastPaymentError"
      ]
    },
    "Unit": {
      "type": "string",
      "enum": [
        "UNIT_UNKNOWN",
        "UNIT_GIB_HOUR",
        "UNIT_HOUR"
      ],
      "default": "UNIT_UNKNOWN"
    },
    "UpdateBillingAccountBody": {
      "type": "object",
      "properties": {
        "billingAccount": {
          "type": "object",
          "properties": {
            "createTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "displayName": {
              "type": "string"
            },
            "stripeRef": {
              "type": "string"
            },
            "createBy": {
              "type": "string",
              "readOnly": true
            },
            "monthlySpend": {
              "type": "string",
              "readOnly": true
            },
            "hourlySpendRate": {
              "$ref": "#/definitions/Decimal",
              "readOnly": true
            },
            "taxId": {
              "$ref": "#/definitions/TaxId"
            },
            "invoiceTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "billingThreshold": {
              "$ref": "#/definitions/Decimal",
              "readOnly": true
            },
            "monthlySpendLimit": {
              "$ref": "#/definitions/Decimal",
              "readOnly": true
            },
            "hourlySpendLimit": {
              "$ref": "#/definitions/Decimal",
              "readOnly": true
            },
            "nextInvoiceTotal": {
              "$ref": "#/definitions/Decimal",
              "readOnly": true
            },
            "creditBalance": {
              "$ref": "#/definitions/Decimal",
              "readOnly": true
            },
            "creditBalanceRecharge": {
              "$ref": "#/definitions/CreditBalanceRecharge"
            },
            "billingAddress": {
              "$ref": "#/definitions/BillingAddress"
            },
            "state": {
              "$ref": "#/definitions/BillingAccountState"
            },
            "paymentTerms": {
              "$ref": "#/definitions/PaymentTerms"
            }
          }
        },
        "updateMask": {
          "type": "string"
        }
      },
      "required": [
        "updateMask"
      ]
    },
    "UpdateDataCenterBody": {
      "type": "object",
      "properties": {
        "dataCenter": {
          "type": "object",
          "properties": {
            "regionId": {
              "type": "string"
            },
            "supplierName": {
              "type": "string"
            },
            "renewableEnergy": {
              "type": "boolean"
            },
            "lngLat": {
              "$ref": "#/definitions/Point"
            },
            "createBy": {
              "type": "string",
              "readOnly": true
            },
            "oneFrontendId": {
              "type": "string"
            },
            "s3Endpoint": {
              "type": "string"
            }
          }
        },
        "updateMask": {
          "type": "string"
        }
      },
      "required": [
        "oneFrontendId",
        "s3Endpoint"
      ]
    },
    "UpdateHostResponse": {
      "type": "object"
    },
    "UpdateImageResponse": {
      "type": "object"
    },
    "UpdateNetResponse": {
      "type": "object"
    },
    "UpdatePrivateVMImageResponse": {
      "type": "object"
    },
    "UpdateProjectBody": {
      "type": "object",
      "properties": {
        "project": {
          "type": "object",
          "properties": {
            "billingAccountId": {
              "type": "string"
            },
            "resourceCount": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "createBy": {
              "type": "string",
              "readOnly": true
            }
          }
        },
        "updateMask": {
          "type": "string"
        }
      },
      "required": [
        "billingAccountId"
      ]
    },
    "UpdateSecurityGroupResponse": {
      "type": "object",
      "properties": {
        "securityGroup": {
          "$ref": "#/definitions/SecurityGroup"
        }
      },
      "required": [
        "securityGroup"
      ]
    },
    "UpdateVMExpireTimeBody": {
      "type": "object",
      "properties": {
        "expireTime": {
          "type": "string",
          "format": "date-time"
        },
        "ttl": {
          "type": "string"
        }
      }
    },
    "UpdateVMExpireTimeResponse": {
      "type": "object",
      "properties": {
        "expireTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UpdateVMMetadataBody": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "merge": {
          "type": "boolean"
        }
      }
    },
    "UpdateVMMetadataResponse": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "UpdateVMResponse": {
      "type": "object"
    },
    "UserPermission": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "userPicture": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "permissionRole": {
          "$ref": "#/definitions/Role"
        }
      },
      "required": [
        "userId",
        "userEmail",
        "userPicture",
        "role",
        "permissionRole"
      ]
    },
    "VM": {
      "type": "object",
      "properties": {
        "datacenterId": {
          "type": "string",
          "readOnly": true
        },
        "machineType": {
          "type": "string"
        },
        "regionId": {
          "type": "string",
          "readOnly": true
        },
        "regionName": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "externalIpAddress": {
          "type": "string"
        },
        "internalIpAddress": {
          "type": "string"
        },
        "publicIpAddress": {
          "type": "string"
        },
        "memory": {
          "type": "integer",
          "format": "int64"
        },
        "cpuModel": {
          "type": "string"
        },
        "vcpus": {
          "type": "integer",
          "format": "int64"
        },
        "gpuModel": {
          "type": "string"
        },
        "gpuModelId": {
          "type": "string"
        },
        "gpuQuantity": {
          "type": "integer",
          "format": "int64"
        },
        "bootDiskSizeGib": {
          "type": "integer",
          "format": "int64"
        },
        "priceHr": {
          "type": "number",
          "format": "float"
        },
        "renewableEnergy": {
          "type": "boolean"
        },
        "imageId": {
          "type": "string"
        },
        "publicImageId": {
          "type": "string"
        },
        "publicImageName": {
          "type": "string"
        },
        "privateImageId": {
          "type": "string"
        },
        "imageName": {
          "type": "string"
        },
        "createBy": {
          "type": "string",
          "readOnly": true
        },
        "nics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VM.NIC"
          }
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SecurityGroupRule"
          }
        },
        "securityGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shortState": {
          "type": "string"
        },
        "bootDisk": {
          "$ref": "#/definitions/Disk"
        },
        "storageDisks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Disk"
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "$ref": "#/definitions/VmState"
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "expireTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "VM.NIC": {
      "type": "object",
      "properties": {
        "networkId": {
          "type": "string"
        },
        "externalIpAddress": {
          "type": "string"
        },
        "internalIpAddress": {
          "type": "string"
        },
        "networkAddress": {
          "type": "string"
        },
        "securityGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VMDataCenter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        },
        "supplierName": {
          "type": "string"
        },
        "renewableEnergy": {
          "type": "boolean"
        },
        "diskPoolPricing": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DiskStoragePriceHr"
          }
        },
        "networkPricing": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/NetworkPriceHr"
          }
        },
        "ipv4PriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "ipv4Free": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "id",
        "regionId",
        "supplierName",
        "renewableEnergy",
        "ipv4Free"
      ]
    },
    "VMDataCenter.StorageClass": {
      "type": "string",
      "enum": [
        "STORAGE_CLASS_UNKNOWN",
        "STORAGE_CLASS_LOCAL",
        "STORAGE_CLASS_NETWORK"
      ],
      "default": "STORAGE_CLASS_UNKNOWN"
    },
    "VMDataCenter.VRouterSize": {
      "type": "string",
      "enum": [
        "VROUTER_INSTANCE_UNKNOWN",
        "VROUTER_INSTANCE_SMALL",
        "VROUTER_INSTANCE_MEDIUM",
        "VROUTER_INSTANCE_LARGE"
      ],
      "default": "VROUTER_INSTANCE_UNKNOWN"
    },
    "VMMachineType": {
      "type": "object",
      "properties": {
        "dataCenterId": {
          "type": "string"
        },
        "machineType": {
          "type": "string"
        },
        "cpuModel": {
          "type": "string"
        },
        "gpuModel": {
          "type": "string"
        },
        "gpuModelId": {
          "type": "string"
        },
        "minVcpuPerMemoryGib": {
          "type": "number",
          "format": "double"
        },
        "maxVcpuPerMemoryGib": {
          "type": "number",
          "format": "double"
        },
        "minVcpuPerGpu": {
          "type": "number",
          "format": "double"
        },
        "maxVcpuPerGpu": {
          "type": "number",
          "format": "double"
        },
        "vcpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "memoryGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "gpuPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "minStorageGibPriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "ipv4PriceHr": {
          "$ref": "#/definitions/Decimal"
        },
        "renewableEnergy": {
          "type": "boolean"
        },
        "maxVcpuFree": {
          "type": "integer",
          "format": "int32"
        },
        "totalVcpuFree": {
          "type": "integer",
          "format": "int32"
        },
        "maxMemoryGibFree": {
          "type": "integer",
          "format": "int32"
        },
        "totalMemoryGibFree": {
          "type": "integer",
          "format": "int32"
        },
        "maxGpuFree": {
          "type": "integer",
          "format": "int32"
        },
        "totalGpuFree": {
          "type": "integer",
          "format": "int32"
        },
        "maxStorageGibFree": {
          "type": "integer",
          "format": "int32"
        },
        "totalStorageGibFree": {
          "type": "integer",
          "format": "int32"
        },
        "minVcpu": {
          "type": "number",
          "format": "double"
        },
        "minMemoryGib": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "dataCenterId",
        "machineType",
        "cpuModel",
        "gpuModel",
        "gpuModelId",
        "minVcpuPerMemoryGib",
        "maxVcpuPerMemoryGib",
        "minVcpuPerGpu",
        "maxVcpuPerGpu",
        "vcpuPriceHr",
        "memoryGibPriceHr",
        "gpuPriceHr",
        "minStorageGibPriceHr",
        "ipv4PriceHr",
        "renewableEnergy",
        "maxVcpuFree",
        "totalVcpuFree",
        "maxMemoryGibFree",
        "totalMemoryGibFree",
        "maxGpuFree",
        "totalGpuFree",
        "maxStorageGibFree",
        "totalStorageGibFree",
        "minVcpu",
        "minMemoryGib"
      ]
    },
    "VMMonitoringItem": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "number",
          "format": "float"
        },
        "diskRdBytes": {
          "type": "string",
          "format": "int64"
        },
        "diskRdIops": {
          "type": "string",
          "format": "int64"
        },
        "diskWrBytes": {
          "type": "string",
          "format": "int64"
        },
        "diskWrIops": {
          "type": "string",
          "format": "int64"
        },
        "memory": {
          "type": "string",
          "format": "int64"
        },
        "netRx": {
          "type": "string",
          "format": "int64"
        },
        "netTx": {
          "type": "string",
          "format": "int64"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "VirtualMachineResult": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "dataCenterId": {
          "type": "string"
        },
        "gpuModelId": {
          "type": "string"
        },
        "gpus": {
          "type": "integer",
          "format": "int32"
        },
        "vcpus": {
          "type": "integer",
          "format": "int32"
        },
        "memoryGib": {
          "type": "integer",
          "format": "int32"
        },
        "bootDiskSizeGib": {
          "type": "integer",
          "format": "int32"
        },
        "bootDiskPublicImageId": {
          "type": "string"
        },
        "bootDiskPrivateImageId": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/VmState"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "VmState": {
      "type": "string",
      "enum": [
        "CLONING",
        "CREATING_SNAPSHOT",
        "DELETED",
        "DELETING",
        "DELETING_SNAPSHOT",
        "FAILED",
        "HOTPLUGGING",
        "MIGRATING",
        "RECREATING",
        "REVERTING_SNAPSHOT",
        "RESIZING",
        "RESIZING_DISK",
        "ACTIVE",
        "STARTING",
        "STOPPED",
        "STOPPING",
        "SUSPENDED",
        "SUSPENDING",
        "UNKNOWN",
        "PENDING"
      ],
      "default": "CLONING"
    },
    "protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "v1.DataCenter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        },
        "supplierName": {
          "type": "string"
        },
        "renewableEnergy": {
          "type": "boolean"
        },
        "lngLat": {
          "$ref": "#/definitions/Point"
        },
        "createBy": {
          "type": "string",
          "readOnly": true
        },
        "oneFrontendId": {
          "type": "string"
        },
        "s3Endpoint": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "oneFrontendId",
        "s3Endpoint"
      ]
    },
    "v1.VRouterSize": {
      "type": "string",
      "enum": [
        "VROUTER_INSTANCE_UNKNOWN",
        "VROUTER_INSTANCE_SMALL",
        "VROUTER_INSTANCE_MEDIUM",
        "VROUTER_INSTANCE_LARGE"
      ],
      "default": "VROUTER_INSTANCE_UNKNOWN"
    }
  }
}